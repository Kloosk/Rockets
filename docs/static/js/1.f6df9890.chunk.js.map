{"version":3,"sources":["../node_modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["GLTFLoader","manager","Loader","call","this","dracoLoader","ddsLoader","ktx2Loader","pluginCallbacks","register","parser","GLTFMaterialsClearcoatExtension","GLTFTextureBasisUExtension","GLTFMaterialsTransmissionExtension","GLTFRegistry","objects","get","key","add","object","remove","removeAll","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","setKTX2Loader","callback","indexOf","push","unregister","splice","content","extensions","plugins","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","undefined","asset","version","Error","GLTFParser","fileLoader","i","length","plugin","name","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","warn","setExtensions","setPlugins","KHR_MATERIALS_CLEARCOAT","KHR_MATERIALS_TRANSMISSION","KHR_TEXTURE_BASISU","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","Color","fromArray","range","type","DirectionalLight","target","position","set","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","materialIndex","materials","MeshPhysicalMaterial","extendMaterialParams","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","Vector2","transmissionFactor","transmission","transmissionTexture","loadTexture","textureIndex","textureDef","textures","source","images","options","loadTextureImage","BINARY_EXTENSION_CHUNK_TYPES","body","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","repeat","texCoord","needsUpdate","copy","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","dracoExtension","indices","createAttributesKey","mode","attributesKey","keys","sort","cache","associations","Map","primitiveCache","meshCache","refs","uses","cameraCache","lightCache","createImageBitmap","navigator","userAgent","textureLoader","ImageBitmapLoader","TextureLoader","setCrossOrigin","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","setIndex","box","Box3","min","max","Vector3","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","TriangleFanDrawMode","getX","newGeometry","_markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","_addNodeRef","skin","isSkinnedMesh","camera","light","_getNodeRef","ref","_invokeOne","func","_invokeAll","unshift","cacheKey","dependency","loadScene","loadNode","ext","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureExtensions","getHandler","URL","self","webkitURL","sourceURI","isObjectURL","hasAlpha","mimeType","getUint8","blob","Blob","createObjectURL","isImageBitmapLoader","imageBitmap","CanvasTexture","revokeObjectURL","flipY","format","RGBFormat","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","gltfReference","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","y","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","transparent","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","geometryPromise","cached","promise","BufferGeometry","meshIndex","depthTest","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","LineSegments","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","o","Bone","Object3D","PropertyBinding","sanitizeNodeName","matrix","Matrix4","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","file":"static/js/1.f6df9890.chunk.js","sourcesContent":["import {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tCanvasTexture,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tImageBitmapLoader,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBFormat,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTangentSpaceNormalMap,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\t\tthis.ktx2Loader = null;\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureBasisUExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( parser );\n\n\t\t} );\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetKTX2Loader: function ( ktx2Loader ) {\n\n\t\t\tthis.ktx2Loader = ktx2Loader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\t\t\tvar plugins = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager,\n\t\t\t\tktx2Loader: this.ktx2Loader\n\n\t\t\t} );\n\n\t\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\t\tfor ( var i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\t\tvar plugin = this.pluginCallbacks[ i ]( parser );\n\t\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t\t// Remove this workaround if we move all the existing\n\t\t\t\t// extension handlers to plugin system\n\t\t\t\textensions[ plugin.name ] = true;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.setExtensions( extensions );\n\t\t\tparser.setPlugins( plugins );\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_TRANSMISSION: 'KHR_materials_transmission',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_BASISU: 'KHR_texture_basisu',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function ( materialIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Transmission Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n\t * Draft: https://github.com/KhronosGroup/glTF/pull/1698\n\t */\n\tfunction GLTFMaterialsTransmissionExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_TRANSMISSION;\n\n\t}\n\n\tGLTFMaterialsTransmissionExtension.prototype.getMaterialType = function ( materialIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsTransmissionExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.transmissionFactor !== undefined ) {\n\n\t\t\tmaterialParams.transmission = extension.transmissionFactor;\n\n\t\t}\n\n\t\tif ( extension.transmissionTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'transmissionMap', extension.transmissionTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * BasisU Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n\t * (draft PR https://github.com/KhronosGroup/glTF/pull/1751)\n\t */\n\tfunction GLTFTextureBasisUExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_BASISU;\n\n\t}\n\n\tGLTFTextureBasisUExtension.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar json = parser.json;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ this.name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar extension = textureDef.extensions[ this.name ];\n\t\tvar source = json.images[ extension.source ];\n\t\tvar loader = parser.options.ktx2Loader;\n\n\t\tif ( ! loader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures' );\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, source, loader );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Object3D instance caches\n\t\tthis.meshCache = { refs: {}, uses: {} };\n\t\tthis.cameraCache = { refs: {}, uses: {} };\n\t\tthis.lightCache = { refs: {}, uses: {} };\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\t\tif ( typeof createImageBitmap !== 'undefined' && /Firefox/.test( navigator.userAgent ) === false ) {\n\n\t\t\tthis.textureLoader = new ImageBitmapLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.setExtensions = function ( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t};\n\n\tGLTFParser.prototype.setPlugins = function ( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t};\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis._markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype._markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Iterate over all nodes, marking references to shared resources,\n\t\t// as well as skeleton joints.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.meshCache, nodeDef.mesh );\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.cameraCache, nodeDef.camera );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.lightCache, nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Counts references to shared node / Object3D resources. These resources\n\t * can be reused, or \"instantiated\", at multiple nodes in the scene\n\t * hierarchy. Mesh, Camera, and Light instances are instantiated and must\n\t * be marked. Non-scenegraph resources (like Materials, Geometries, and\n\t * Textures) can be reused directly and are not marked here.\n\t *\n\t * Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t */\n\tGLTFParser.prototype._addNodeRef = function ( cache, index ) {\n\n\t\tif ( index === undefined ) return;\n\n\t\tif ( cache.refs[ index ] === undefined ) {\n\n\t\t\tcache.refs[ index ] = cache.uses[ index ] = 0;\n\n\t\t}\n\n\t\tcache.refs[ index ] ++;\n\n\t};\n\n\t/** Returns a reference to a shared resource, cloning it if necessary. */\n\tGLTFParser.prototype._getNodeRef = function ( cache, index, object ) {\n\n\t\tif ( cache.refs[ index ] <= 1 ) return object;\n\n\t\tvar ref = object.clone();\n\n\t\tref.name += '_instance_' + ( cache.uses[ index ] ++ );\n\n\t\treturn ref;\n\n\t};\n\n\tGLTFParser.prototype._invokeOne = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tvar result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t};\n\n\tGLTFParser.prototype._invokeAll = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tpending.push( func( extensions[ i ] ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadTexture && ext.loadTexture( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar loader;\n\n\t\tif ( source.uri ) {\n\n\t\t\tloader = options.manager.getHandler( source.uri );\n\n\t\t}\n\n\t\tif ( ! loader ) {\n\n\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t: this.textureLoader;\n\n\t\t}\n\n\t\treturn this.loadTextureImage( textureIndex, source, loader );\n\n\t};\n\n\tGLTFParser.prototype.loadTextureImage = function ( textureIndex, source, loader ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\t\tvar hasAlpha = true;\n\n\t\tif ( source.mimeType === 'image/jpeg' ) hasAlpha = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tif ( source.mimeType === 'image/png' ) {\n\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Portable_Network_Graphics#File_header\n\t\t\t\t\thasAlpha = new DataView( bufferView, 25, 1 ).getUint8( 0, false ) === 6;\n\n\t\t\t\t}\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tvar onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tresolve( new CanvasTexture( imageBitmap ) );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// When there is definitely no alpha channel in the texture, set RGBFormat to save space.\n\t\t\tif ( ! hasAlpha ) texture.format = RGBFormat;\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\tparser.associations.set( texture, {\n\t\t\t\ttype: 'textures',\n\t\t\t\tindex: textureIndex\n\t\t\t} );\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tvar gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', geometry.attributes.uv );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\tGLTFParser.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshStandardMaterial;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { type: 'materials', index: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See ._markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node = parser._getNodeRef( parser.meshCache, nodeDef.mesh, mesh );\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ).then( function ( camera ) {\n\n\t\t\t\t\treturn parser._getNodeRef( parser.cameraCache, nodeDef.camera, camera );\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tvar lightIndex = nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light;\n\n\t\t\t\tpending.push( parser.getDependency( 'light', lightIndex ).then( function ( light ) {\n\n\t\t\t\t\treturn parser._getNodeRef( parser.lightCache, lightIndex, light );\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See ._markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.associations.set( node, { type: 'nodes', index: nodeIndex } );\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"sourceRoot":""}